#include <alt_bn128.hpp>
#include "pilfflonk_steps.hpp"

void PilFflonkSteps::step3_first(AltBn128::Engine &E, StepsParams &params, uint64_t i) {
     AltBn128::FrElement tmp_74 = params.cm1_n[1 + i*4];
     AltBn128::FrElement tmp_75 = params.cm1_n[2 + ((i + 1)%256)*4];
     AltBn128::FrElement tmp_76 = E.fr.mul(params.cm1_n[1 + i*4], params.cm1_n[2 + ((i + 1)%256)*4]);
     AltBn128::FrElement tmp_77 = params.const_n[2 + i * 4];
     AltBn128::FrElement tmp_78 = params.const_n[3 + i * 4];
     AltBn128::FrElement tmp_79 = params.cm1_n[3 + i*4];
     AltBn128::FrElement tmp_80 = params.const_n[1 + i * 4];
     AltBn128::FrElement tmp_48 = E.fr.mul(params.challenges[0], tmp_77);
     AltBn128::FrElement tmp_49 = E.fr.add(tmp_48, tmp_78);
     AltBn128::FrElement tmp_50 = E.fr.mul(params.challenges[0], tmp_49);
     AltBn128::FrElement tmp_51 = E.fr.add(tmp_50, tmp_79);
     AltBn128::FrElement tmp_52 = E.fr.sub(tmp_51, params.challenges[1]);
     AltBn128::FrElement tmp_53 = E.fr.mul(tmp_52, tmp_80);
     params.tmpExp_n[0 + i*2] = E.fr.add(tmp_53, params.challenges[1]);
     AltBn128::FrElement tmp_81 = params.cm1_n[0 + i*4];
     AltBn128::FrElement tmp_54 = E.fr.mul(tmp_74, params.challenges[0]);
     AltBn128::FrElement tmp_55 = E.fr.add(tmp_54, tmp_75);
     AltBn128::FrElement tmp_56 = E.fr.mul(tmp_55, params.challenges[0]);
     AltBn128::FrElement tmp_57 = E.fr.add(tmp_56, tmp_76);
     AltBn128::FrElement tmp_58 = E.fr.sub(tmp_57, params.tmpExp_n[0 + i*2]);
     AltBn128::FrElement tmp_59 = E.fr.mul(tmp_58, tmp_81);
     params.cm3_n[1 + i*3] = E.fr.add(tmp_59, params.tmpExp_n[0 + i*2]);
     AltBn128::FrElement tmp_82 = params.const_n[2 + ((i + 1)%256) * 4];
     AltBn128::FrElement tmp_83 = params.const_n[3 + ((i + 1)%256) * 4];
     AltBn128::FrElement tmp_84 = params.cm1_n[3 + ((i + 1)%256)*4];
     AltBn128::FrElement tmp_85 = params.const_n[1 + ((i + 1)%256) * 4];
     AltBn128::FrElement tmp_60 = E.fr.mul(params.challenges[0], tmp_82);
     AltBn128::FrElement tmp_61 = E.fr.add(tmp_60, tmp_83);
     AltBn128::FrElement tmp_62 = E.fr.mul(params.challenges[0], tmp_61);
     AltBn128::FrElement tmp_63 = E.fr.add(tmp_62, tmp_84);
     AltBn128::FrElement tmp_64 = E.fr.sub(tmp_63, params.challenges[1]);
     AltBn128::FrElement tmp_65 = E.fr.mul(tmp_64, tmp_85);
     params.tmpExp_n[0 + ((i + 1)%256)*2] = E.fr.add(tmp_65, params.challenges[1]);
     AltBn128::FrElement tmp_66 = E.fr.add(params.cm3_n[1 + i*3], params.challenges[3]);
     AltBn128::FrElement tmp_67 = E.fr.mul(params.tmpExp_n[0 + ((i + 1)%256)*2], params.challenges[2]);
     AltBn128::FrElement tmp_68 = E.fr.add(params.tmpExp_n[0 + i*2], tmp_67);
     AltBn128::FrElement tmp_69 = E.fr.add(params.constValues[0], params.challenges[2]);
     AltBn128::FrElement tmp_70 = E.fr.mul(params.challenges[3], tmp_69);
     AltBn128::FrElement tmp_71 = E.fr.add(tmp_68, tmp_70);
     AltBn128::FrElement tmp_72 = E.fr.mul(tmp_66, tmp_71);
     AltBn128::FrElement tmp_73 = E.fr.add(params.constValues[0], params.challenges[2]);
     params.cm3_n[2 + i*3] = E.fr.mul(tmp_72, tmp_73);
}

void PilFflonkSteps::step3_i(AltBn128::Engine &E, StepsParams &params, uint64_t i) {
     AltBn128::FrElement tmp_74 = params.cm1_n[1 + i*4];
     AltBn128::FrElement tmp_75 = params.cm1_n[2 + ((i + 1)%256)*4];
     AltBn128::FrElement tmp_76 = E.fr.mul(params.cm1_n[1 + i*4], params.cm1_n[2 + ((i + 1)%256)*4]);
     AltBn128::FrElement tmp_77 = params.const_n[2 + i * 4];
     AltBn128::FrElement tmp_78 = params.const_n[3 + i * 4];
     AltBn128::FrElement tmp_79 = params.cm1_n[3 + i*4];
     AltBn128::FrElement tmp_80 = params.const_n[1 + i * 4];
     AltBn128::FrElement tmp_48 = E.fr.mul(params.challenges[0], tmp_77);
     AltBn128::FrElement tmp_49 = E.fr.add(tmp_48, tmp_78);
     AltBn128::FrElement tmp_50 = E.fr.mul(params.challenges[0], tmp_49);
     AltBn128::FrElement tmp_51 = E.fr.add(tmp_50, tmp_79);
     AltBn128::FrElement tmp_52 = E.fr.sub(tmp_51, params.challenges[1]);
     AltBn128::FrElement tmp_53 = E.fr.mul(tmp_52, tmp_80);
     params.tmpExp_n[0 + i*2] = E.fr.add(tmp_53, params.challenges[1]);
     AltBn128::FrElement tmp_81 = params.cm1_n[0 + i*4];
     AltBn128::FrElement tmp_54 = E.fr.mul(tmp_74, params.challenges[0]);
     AltBn128::FrElement tmp_55 = E.fr.add(tmp_54, tmp_75);
     AltBn128::FrElement tmp_56 = E.fr.mul(tmp_55, params.challenges[0]);
     AltBn128::FrElement tmp_57 = E.fr.add(tmp_56, tmp_76);
     AltBn128::FrElement tmp_58 = E.fr.sub(tmp_57, params.tmpExp_n[0 + i*2]);
     AltBn128::FrElement tmp_59 = E.fr.mul(tmp_58, tmp_81);
     params.cm3_n[1 + i*3] = E.fr.add(tmp_59, params.tmpExp_n[0 + i*2]);
     AltBn128::FrElement tmp_82 = params.const_n[2 + ((i + 1)%256) * 4];
     AltBn128::FrElement tmp_83 = params.const_n[3 + ((i + 1)%256) * 4];
     AltBn128::FrElement tmp_84 = params.cm1_n[3 + ((i + 1)%256)*4];
     AltBn128::FrElement tmp_85 = params.const_n[1 + ((i + 1)%256) * 4];
     AltBn128::FrElement tmp_60 = E.fr.mul(params.challenges[0], tmp_82);
     AltBn128::FrElement tmp_61 = E.fr.add(tmp_60, tmp_83);
     AltBn128::FrElement tmp_62 = E.fr.mul(params.challenges[0], tmp_61);
     AltBn128::FrElement tmp_63 = E.fr.add(tmp_62, tmp_84);
     AltBn128::FrElement tmp_64 = E.fr.sub(tmp_63, params.challenges[1]);
     AltBn128::FrElement tmp_65 = E.fr.mul(tmp_64, tmp_85);
     params.tmpExp_n[0 + ((i + 1)%256)*2] = E.fr.add(tmp_65, params.challenges[1]);
     AltBn128::FrElement tmp_66 = E.fr.add(params.cm3_n[1 + i*3], params.challenges[3]);
     AltBn128::FrElement tmp_67 = E.fr.mul(params.tmpExp_n[0 + ((i + 1)%256)*2], params.challenges[2]);
     AltBn128::FrElement tmp_68 = E.fr.add(params.tmpExp_n[0 + i*2], tmp_67);
     AltBn128::FrElement tmp_69 = E.fr.add(params.constValues[0], params.challenges[2]);
     AltBn128::FrElement tmp_70 = E.fr.mul(params.challenges[3], tmp_69);
     AltBn128::FrElement tmp_71 = E.fr.add(tmp_68, tmp_70);
     AltBn128::FrElement tmp_72 = E.fr.mul(tmp_66, tmp_71);
     AltBn128::FrElement tmp_73 = E.fr.add(params.constValues[0], params.challenges[2]);
     params.cm3_n[2 + i*3] = E.fr.mul(tmp_72, tmp_73);
}

void PilFflonkSteps::step3_last(AltBn128::Engine &E, StepsParams &params, uint64_t i) {
     AltBn128::FrElement tmp_74 = params.cm1_n[1 + i*4];
     AltBn128::FrElement tmp_75 = params.cm1_n[2 + ((i + 1)%256)*4];
     AltBn128::FrElement tmp_76 = E.fr.mul(params.cm1_n[1 + i*4], params.cm1_n[2 + ((i + 1)%256)*4]);
     AltBn128::FrElement tmp_77 = params.const_n[2 + i * 4];
     AltBn128::FrElement tmp_78 = params.const_n[3 + i * 4];
     AltBn128::FrElement tmp_79 = params.cm1_n[3 + i*4];
     AltBn128::FrElement tmp_80 = params.const_n[1 + i * 4];
     AltBn128::FrElement tmp_48 = E.fr.mul(params.challenges[0], tmp_77);
     AltBn128::FrElement tmp_49 = E.fr.add(tmp_48, tmp_78);
     AltBn128::FrElement tmp_50 = E.fr.mul(params.challenges[0], tmp_49);
     AltBn128::FrElement tmp_51 = E.fr.add(tmp_50, tmp_79);
     AltBn128::FrElement tmp_52 = E.fr.sub(tmp_51, params.challenges[1]);
     AltBn128::FrElement tmp_53 = E.fr.mul(tmp_52, tmp_80);
     params.tmpExp_n[0 + i*2] = E.fr.add(tmp_53, params.challenges[1]);
     AltBn128::FrElement tmp_81 = params.cm1_n[0 + i*4];
     AltBn128::FrElement tmp_54 = E.fr.mul(tmp_74, params.challenges[0]);
     AltBn128::FrElement tmp_55 = E.fr.add(tmp_54, tmp_75);
     AltBn128::FrElement tmp_56 = E.fr.mul(tmp_55, params.challenges[0]);
     AltBn128::FrElement tmp_57 = E.fr.add(tmp_56, tmp_76);
     AltBn128::FrElement tmp_58 = E.fr.sub(tmp_57, params.tmpExp_n[0 + i*2]);
     AltBn128::FrElement tmp_59 = E.fr.mul(tmp_58, tmp_81);
     params.cm3_n[1 + i*3] = E.fr.add(tmp_59, params.tmpExp_n[0 + i*2]);
     AltBn128::FrElement tmp_82 = params.const_n[2 + ((i + 1)%256) * 4];
     AltBn128::FrElement tmp_83 = params.const_n[3 + ((i + 1)%256) * 4];
     AltBn128::FrElement tmp_84 = params.cm1_n[3 + ((i + 1)%256)*4];
     AltBn128::FrElement tmp_85 = params.const_n[1 + ((i + 1)%256) * 4];
     AltBn128::FrElement tmp_60 = E.fr.mul(params.challenges[0], tmp_82);
     AltBn128::FrElement tmp_61 = E.fr.add(tmp_60, tmp_83);
     AltBn128::FrElement tmp_62 = E.fr.mul(params.challenges[0], tmp_61);
     AltBn128::FrElement tmp_63 = E.fr.add(tmp_62, tmp_84);
     AltBn128::FrElement tmp_64 = E.fr.sub(tmp_63, params.challenges[1]);
     AltBn128::FrElement tmp_65 = E.fr.mul(tmp_64, tmp_85);
     params.tmpExp_n[0 + ((i + 1)%256)*2] = E.fr.add(tmp_65, params.challenges[1]);
     AltBn128::FrElement tmp_66 = E.fr.add(params.cm3_n[1 + i*3], params.challenges[3]);
     AltBn128::FrElement tmp_67 = E.fr.mul(params.tmpExp_n[0 + ((i + 1)%256)*2], params.challenges[2]);
     AltBn128::FrElement tmp_68 = E.fr.add(params.tmpExp_n[0 + i*2], tmp_67);
     AltBn128::FrElement tmp_69 = E.fr.add(params.constValues[0], params.challenges[2]);
     AltBn128::FrElement tmp_70 = E.fr.mul(params.challenges[3], tmp_69);
     AltBn128::FrElement tmp_71 = E.fr.add(tmp_68, tmp_70);
     AltBn128::FrElement tmp_72 = E.fr.mul(tmp_66, tmp_71);
     AltBn128::FrElement tmp_73 = E.fr.add(params.constValues[0], params.challenges[2]);
     params.cm3_n[2 + i*3] = E.fr.mul(tmp_72, tmp_73);
}
