#include <alt_bn128.hpp>
#include "pilfflonk_steps.hpp"

void PilFflonkSteps::step3_first(AltBn128::Engine &E, StepsParams &params, uint64_t i) {
     AltBn128::FrElement tmp_118 = params.cm1_n[12 + i*15];
     AltBn128::FrElement tmp_119 = params.cm1_n[13 + ((i + 1)%256)*15];
     AltBn128::FrElement tmp_120 = E.fr.mul(params.cm1_n[12 + i*15], params.cm1_n[13 + ((i + 1)%256)*15]);
     AltBn128::FrElement tmp_121 = params.const_n[7 + i * 9];
     AltBn128::FrElement tmp_122 = params.const_n[8 + i * 9];
     AltBn128::FrElement tmp_123 = params.cm1_n[14 + i*15];
     AltBn128::FrElement tmp_124 = params.const_n[6 + i * 9];
     AltBn128::FrElement tmp_74 = E.fr.mul(params.challenges[0], tmp_121);
     AltBn128::FrElement tmp_75 = E.fr.add(tmp_74, tmp_122);
     AltBn128::FrElement tmp_76 = E.fr.mul(params.challenges[0], tmp_75);
     AltBn128::FrElement tmp_77 = E.fr.add(tmp_76, tmp_123);
     AltBn128::FrElement tmp_78 = E.fr.sub(tmp_77, params.challenges[1]);
     AltBn128::FrElement tmp_79 = E.fr.mul(tmp_78, tmp_124);
     params.tmpExp_n[0 + i*4] = E.fr.add(tmp_79, params.challenges[1]);
     AltBn128::FrElement tmp_125 = params.cm1_n[11 + i*15];
     AltBn128::FrElement tmp_80 = E.fr.mul(tmp_118, params.challenges[0]);
     AltBn128::FrElement tmp_81 = E.fr.add(tmp_80, tmp_119);
     AltBn128::FrElement tmp_82 = E.fr.mul(tmp_81, params.challenges[0]);
     AltBn128::FrElement tmp_83 = E.fr.add(tmp_82, tmp_120);
     AltBn128::FrElement tmp_84 = E.fr.sub(tmp_83, params.tmpExp_n[0 + i*4]);
     AltBn128::FrElement tmp_85 = E.fr.mul(tmp_84, tmp_125);
     params.cm3_n[3 + i*7] = E.fr.add(tmp_85, params.tmpExp_n[0 + i*4]);
     AltBn128::FrElement tmp_126 = params.const_n[7 + ((i + 1)%256) * 9];
     AltBn128::FrElement tmp_127 = params.const_n[8 + ((i + 1)%256) * 9];
     AltBn128::FrElement tmp_128 = params.cm1_n[14 + ((i + 1)%256)*15];
     AltBn128::FrElement tmp_129 = params.const_n[6 + ((i + 1)%256) * 9];
     AltBn128::FrElement tmp_86 = E.fr.mul(params.challenges[0], tmp_126);
     AltBn128::FrElement tmp_87 = E.fr.add(tmp_86, tmp_127);
     AltBn128::FrElement tmp_88 = E.fr.mul(params.challenges[0], tmp_87);
     AltBn128::FrElement tmp_89 = E.fr.add(tmp_88, tmp_128);
     AltBn128::FrElement tmp_90 = E.fr.sub(tmp_89, params.challenges[1]);
     AltBn128::FrElement tmp_91 = E.fr.mul(tmp_90, tmp_129);
     params.tmpExp_n[0 + ((i + 1)%256)*4] = E.fr.add(tmp_91, params.challenges[1]);
     AltBn128::FrElement tmp_92 = E.fr.add(params.cm3_n[3 + i*7], params.challenges[3]);
     AltBn128::FrElement tmp_93 = E.fr.mul(params.tmpExp_n[0 + ((i + 1)%256)*4], params.challenges[2]);
     AltBn128::FrElement tmp_94 = E.fr.add(params.tmpExp_n[0 + i*4], tmp_93);
     AltBn128::FrElement tmp_95 = E.fr.add(E.fr.set(1), params.challenges[2]);
     AltBn128::FrElement tmp_96 = E.fr.mul(params.challenges[3], tmp_95);
     AltBn128::FrElement tmp_97 = E.fr.add(tmp_94, tmp_96);
     AltBn128::FrElement tmp_98 = E.fr.mul(tmp_92, tmp_97);
     AltBn128::FrElement tmp_99 = E.fr.add(E.fr.set(1), params.challenges[2]);
     params.cm3_n[4 + i*7] = E.fr.mul(tmp_98, tmp_99);
     AltBn128::FrElement tmp_130 = params.cm1_n[2 + i*15];
     AltBn128::FrElement tmp_100 = E.fr.mul(params.challenges[2], params.x_n[i]);
     AltBn128::FrElement tmp_101 = E.fr.add(tmp_130, tmp_100);
     AltBn128::FrElement tmp_131 = E.fr.add(tmp_101, params.challenges[3]);
     AltBn128::FrElement tmp_132 = params.cm1_n[3 + i*15];
     AltBn128::FrElement tmp_102 = E.fr.mul(params.challenges[2], params.constValues[0]);
     AltBn128::FrElement tmp_103 = E.fr.mul(tmp_102, params.x_n[i]);
     AltBn128::FrElement tmp_104 = E.fr.add(tmp_132, tmp_103);
     AltBn128::FrElement tmp_105 = E.fr.add(tmp_104, params.challenges[3]);
     AltBn128::FrElement tmp_133 = E.fr.mul(tmp_131, tmp_105);
     AltBn128::FrElement tmp_134 = params.cm1_n[4 + i*15];
     AltBn128::FrElement tmp_106 = E.fr.mul(params.challenges[2], params.constValues[1]);
     AltBn128::FrElement tmp_107 = E.fr.mul(tmp_106, params.x_n[i]);
     AltBn128::FrElement tmp_108 = E.fr.add(tmp_134, tmp_107);
     AltBn128::FrElement tmp_109 = E.fr.add(tmp_108, params.challenges[3]);
     params.cm3_n[5 + i*7] = E.fr.mul(tmp_133, tmp_109);
     AltBn128::FrElement tmp_135 = params.const_n[3 + i * 9];
     AltBn128::FrElement tmp_110 = E.fr.mul(params.challenges[2], tmp_135);
     AltBn128::FrElement tmp_111 = E.fr.add(tmp_130, tmp_110);
     AltBn128::FrElement tmp_136 = E.fr.add(tmp_111, params.challenges[3]);
     AltBn128::FrElement tmp_137 = params.const_n[4 + i * 9];
     AltBn128::FrElement tmp_112 = E.fr.mul(params.challenges[2], tmp_137);
     AltBn128::FrElement tmp_113 = E.fr.add(tmp_132, tmp_112);
     AltBn128::FrElement tmp_114 = E.fr.add(tmp_113, params.challenges[3]);
     AltBn128::FrElement tmp_138 = E.fr.mul(tmp_136, tmp_114);
     AltBn128::FrElement tmp_139 = params.const_n[5 + i * 9];
     AltBn128::FrElement tmp_115 = E.fr.mul(params.challenges[2], tmp_139);
     AltBn128::FrElement tmp_116 = E.fr.add(tmp_134, tmp_115);
     AltBn128::FrElement tmp_117 = E.fr.add(tmp_116, params.challenges[3]);
     params.cm3_n[6 + i*7] = E.fr.mul(tmp_138, tmp_117);
}

void PilFflonkSteps::step3_i(AltBn128::Engine &E, StepsParams &params, uint64_t i) {
     AltBn128::FrElement tmp_118 = params.cm1_n[12 + i*15];
     AltBn128::FrElement tmp_119 = params.cm1_n[13 + ((i + 1)%256)*15];
     AltBn128::FrElement tmp_120 = E.fr.mul(params.cm1_n[12 + i*15], params.cm1_n[13 + ((i + 1)%256)*15]);
     AltBn128::FrElement tmp_121 = params.const_n[7 + i * 9];
     AltBn128::FrElement tmp_122 = params.const_n[8 + i * 9];
     AltBn128::FrElement tmp_123 = params.cm1_n[14 + i*15];
     AltBn128::FrElement tmp_124 = params.const_n[6 + i * 9];
     AltBn128::FrElement tmp_74 = E.fr.mul(params.challenges[0], tmp_121);
     AltBn128::FrElement tmp_75 = E.fr.add(tmp_74, tmp_122);
     AltBn128::FrElement tmp_76 = E.fr.mul(params.challenges[0], tmp_75);
     AltBn128::FrElement tmp_77 = E.fr.add(tmp_76, tmp_123);
     AltBn128::FrElement tmp_78 = E.fr.sub(tmp_77, params.challenges[1]);
     AltBn128::FrElement tmp_79 = E.fr.mul(tmp_78, tmp_124);
     params.tmpExp_n[0 + i*4] = E.fr.add(tmp_79, params.challenges[1]);
     AltBn128::FrElement tmp_125 = params.cm1_n[11 + i*15];
     AltBn128::FrElement tmp_80 = E.fr.mul(tmp_118, params.challenges[0]);
     AltBn128::FrElement tmp_81 = E.fr.add(tmp_80, tmp_119);
     AltBn128::FrElement tmp_82 = E.fr.mul(tmp_81, params.challenges[0]);
     AltBn128::FrElement tmp_83 = E.fr.add(tmp_82, tmp_120);
     AltBn128::FrElement tmp_84 = E.fr.sub(tmp_83, params.tmpExp_n[0 + i*4]);
     AltBn128::FrElement tmp_85 = E.fr.mul(tmp_84, tmp_125);
     params.cm3_n[3 + i*7] = E.fr.add(tmp_85, params.tmpExp_n[0 + i*4]);
     AltBn128::FrElement tmp_126 = params.const_n[7 + ((i + 1)%256) * 9];
     AltBn128::FrElement tmp_127 = params.const_n[8 + ((i + 1)%256) * 9];
     AltBn128::FrElement tmp_128 = params.cm1_n[14 + ((i + 1)%256)*15];
     AltBn128::FrElement tmp_129 = params.const_n[6 + ((i + 1)%256) * 9];
     AltBn128::FrElement tmp_86 = E.fr.mul(params.challenges[0], tmp_126);
     AltBn128::FrElement tmp_87 = E.fr.add(tmp_86, tmp_127);
     AltBn128::FrElement tmp_88 = E.fr.mul(params.challenges[0], tmp_87);
     AltBn128::FrElement tmp_89 = E.fr.add(tmp_88, tmp_128);
     AltBn128::FrElement tmp_90 = E.fr.sub(tmp_89, params.challenges[1]);
     AltBn128::FrElement tmp_91 = E.fr.mul(tmp_90, tmp_129);
     params.tmpExp_n[0 + ((i + 1)%256)*4] = E.fr.add(tmp_91, params.challenges[1]);
     AltBn128::FrElement tmp_92 = E.fr.add(params.cm3_n[3 + i*7], params.challenges[3]);
     AltBn128::FrElement tmp_93 = E.fr.mul(params.tmpExp_n[0 + ((i + 1)%256)*4], params.challenges[2]);
     AltBn128::FrElement tmp_94 = E.fr.add(params.tmpExp_n[0 + i*4], tmp_93);
     AltBn128::FrElement tmp_95 = E.fr.add(E.fr.set(1), params.challenges[2]);
     AltBn128::FrElement tmp_96 = E.fr.mul(params.challenges[3], tmp_95);
     AltBn128::FrElement tmp_97 = E.fr.add(tmp_94, tmp_96);
     AltBn128::FrElement tmp_98 = E.fr.mul(tmp_92, tmp_97);
     AltBn128::FrElement tmp_99 = E.fr.add(E.fr.set(1), params.challenges[2]);
     params.cm3_n[4 + i*7] = E.fr.mul(tmp_98, tmp_99);
     AltBn128::FrElement tmp_130 = params.cm1_n[2 + i*15];
     AltBn128::FrElement tmp_100 = E.fr.mul(params.challenges[2], params.x_n[i]);
     AltBn128::FrElement tmp_101 = E.fr.add(tmp_130, tmp_100);
     AltBn128::FrElement tmp_131 = E.fr.add(tmp_101, params.challenges[3]);
     AltBn128::FrElement tmp_132 = params.cm1_n[3 + i*15];
     AltBn128::FrElement tmp_102 = E.fr.mul(params.challenges[2], params.constValues[0]);
     AltBn128::FrElement tmp_103 = E.fr.mul(tmp_102, params.x_n[i]);
     AltBn128::FrElement tmp_104 = E.fr.add(tmp_132, tmp_103);
     AltBn128::FrElement tmp_105 = E.fr.add(tmp_104, params.challenges[3]);
     AltBn128::FrElement tmp_133 = E.fr.mul(tmp_131, tmp_105);
     AltBn128::FrElement tmp_134 = params.cm1_n[4 + i*15];
     AltBn128::FrElement tmp_106 = E.fr.mul(params.challenges[2], params.constValues[1]);
     AltBn128::FrElement tmp_107 = E.fr.mul(tmp_106, params.x_n[i]);
     AltBn128::FrElement tmp_108 = E.fr.add(tmp_134, tmp_107);
     AltBn128::FrElement tmp_109 = E.fr.add(tmp_108, params.challenges[3]);
     params.cm3_n[5 + i*7] = E.fr.mul(tmp_133, tmp_109);
     AltBn128::FrElement tmp_135 = params.const_n[3 + i * 9];
     AltBn128::FrElement tmp_110 = E.fr.mul(params.challenges[2], tmp_135);
     AltBn128::FrElement tmp_111 = E.fr.add(tmp_130, tmp_110);
     AltBn128::FrElement tmp_136 = E.fr.add(tmp_111, params.challenges[3]);
     AltBn128::FrElement tmp_137 = params.const_n[4 + i * 9];
     AltBn128::FrElement tmp_112 = E.fr.mul(params.challenges[2], tmp_137);
     AltBn128::FrElement tmp_113 = E.fr.add(tmp_132, tmp_112);
     AltBn128::FrElement tmp_114 = E.fr.add(tmp_113, params.challenges[3]);
     AltBn128::FrElement tmp_138 = E.fr.mul(tmp_136, tmp_114);
     AltBn128::FrElement tmp_139 = params.const_n[5 + i * 9];
     AltBn128::FrElement tmp_115 = E.fr.mul(params.challenges[2], tmp_139);
     AltBn128::FrElement tmp_116 = E.fr.add(tmp_134, tmp_115);
     AltBn128::FrElement tmp_117 = E.fr.add(tmp_116, params.challenges[3]);
     params.cm3_n[6 + i*7] = E.fr.mul(tmp_138, tmp_117);
}

void PilFflonkSteps::step3_last(AltBn128::Engine &E, StepsParams &params, uint64_t i) {
     AltBn128::FrElement tmp_118 = params.cm1_n[12 + i*15];
     AltBn128::FrElement tmp_119 = params.cm1_n[13 + ((i + 1)%256)*15];
     AltBn128::FrElement tmp_120 = E.fr.mul(params.cm1_n[12 + i*15], params.cm1_n[13 + ((i + 1)%256)*15]);
     AltBn128::FrElement tmp_121 = params.const_n[7 + i * 9];
     AltBn128::FrElement tmp_122 = params.const_n[8 + i * 9];
     AltBn128::FrElement tmp_123 = params.cm1_n[14 + i*15];
     AltBn128::FrElement tmp_124 = params.const_n[6 + i * 9];
     AltBn128::FrElement tmp_74 = E.fr.mul(params.challenges[0], tmp_121);
     AltBn128::FrElement tmp_75 = E.fr.add(tmp_74, tmp_122);
     AltBn128::FrElement tmp_76 = E.fr.mul(params.challenges[0], tmp_75);
     AltBn128::FrElement tmp_77 = E.fr.add(tmp_76, tmp_123);
     AltBn128::FrElement tmp_78 = E.fr.sub(tmp_77, params.challenges[1]);
     AltBn128::FrElement tmp_79 = E.fr.mul(tmp_78, tmp_124);
     params.tmpExp_n[0 + i*4] = E.fr.add(tmp_79, params.challenges[1]);
     AltBn128::FrElement tmp_125 = params.cm1_n[11 + i*15];
     AltBn128::FrElement tmp_80 = E.fr.mul(tmp_118, params.challenges[0]);
     AltBn128::FrElement tmp_81 = E.fr.add(tmp_80, tmp_119);
     AltBn128::FrElement tmp_82 = E.fr.mul(tmp_81, params.challenges[0]);
     AltBn128::FrElement tmp_83 = E.fr.add(tmp_82, tmp_120);
     AltBn128::FrElement tmp_84 = E.fr.sub(tmp_83, params.tmpExp_n[0 + i*4]);
     AltBn128::FrElement tmp_85 = E.fr.mul(tmp_84, tmp_125);
     params.cm3_n[3 + i*7] = E.fr.add(tmp_85, params.tmpExp_n[0 + i*4]);
     AltBn128::FrElement tmp_126 = params.const_n[7 + ((i + 1)%256) * 9];
     AltBn128::FrElement tmp_127 = params.const_n[8 + ((i + 1)%256) * 9];
     AltBn128::FrElement tmp_128 = params.cm1_n[14 + ((i + 1)%256)*15];
     AltBn128::FrElement tmp_129 = params.const_n[6 + ((i + 1)%256) * 9];
     AltBn128::FrElement tmp_86 = E.fr.mul(params.challenges[0], tmp_126);
     AltBn128::FrElement tmp_87 = E.fr.add(tmp_86, tmp_127);
     AltBn128::FrElement tmp_88 = E.fr.mul(params.challenges[0], tmp_87);
     AltBn128::FrElement tmp_89 = E.fr.add(tmp_88, tmp_128);
     AltBn128::FrElement tmp_90 = E.fr.sub(tmp_89, params.challenges[1]);
     AltBn128::FrElement tmp_91 = E.fr.mul(tmp_90, tmp_129);
     params.tmpExp_n[0 + ((i + 1)%256)*4] = E.fr.add(tmp_91, params.challenges[1]);
     AltBn128::FrElement tmp_92 = E.fr.add(params.cm3_n[3 + i*7], params.challenges[3]);
     AltBn128::FrElement tmp_93 = E.fr.mul(params.tmpExp_n[0 + ((i + 1)%256)*4], params.challenges[2]);
     AltBn128::FrElement tmp_94 = E.fr.add(params.tmpExp_n[0 + i*4], tmp_93);
     AltBn128::FrElement tmp_95 = E.fr.add(E.fr.set(1), params.challenges[2]);
     AltBn128::FrElement tmp_96 = E.fr.mul(params.challenges[3], tmp_95);
     AltBn128::FrElement tmp_97 = E.fr.add(tmp_94, tmp_96);
     AltBn128::FrElement tmp_98 = E.fr.mul(tmp_92, tmp_97);
     AltBn128::FrElement tmp_99 = E.fr.add(E.fr.set(1), params.challenges[2]);
     params.cm3_n[4 + i*7] = E.fr.mul(tmp_98, tmp_99);
     AltBn128::FrElement tmp_130 = params.cm1_n[2 + i*15];
     AltBn128::FrElement tmp_100 = E.fr.mul(params.challenges[2], params.x_n[i]);
     AltBn128::FrElement tmp_101 = E.fr.add(tmp_130, tmp_100);
     AltBn128::FrElement tmp_131 = E.fr.add(tmp_101, params.challenges[3]);
     AltBn128::FrElement tmp_132 = params.cm1_n[3 + i*15];
     AltBn128::FrElement tmp_102 = E.fr.mul(params.challenges[2], params.constValues[0]);
     AltBn128::FrElement tmp_103 = E.fr.mul(tmp_102, params.x_n[i]);
     AltBn128::FrElement tmp_104 = E.fr.add(tmp_132, tmp_103);
     AltBn128::FrElement tmp_105 = E.fr.add(tmp_104, params.challenges[3]);
     AltBn128::FrElement tmp_133 = E.fr.mul(tmp_131, tmp_105);
     AltBn128::FrElement tmp_134 = params.cm1_n[4 + i*15];
     AltBn128::FrElement tmp_106 = E.fr.mul(params.challenges[2], params.constValues[1]);
     AltBn128::FrElement tmp_107 = E.fr.mul(tmp_106, params.x_n[i]);
     AltBn128::FrElement tmp_108 = E.fr.add(tmp_134, tmp_107);
     AltBn128::FrElement tmp_109 = E.fr.add(tmp_108, params.challenges[3]);
     params.cm3_n[5 + i*7] = E.fr.mul(tmp_133, tmp_109);
     AltBn128::FrElement tmp_135 = params.const_n[3 + i * 9];
     AltBn128::FrElement tmp_110 = E.fr.mul(params.challenges[2], tmp_135);
     AltBn128::FrElement tmp_111 = E.fr.add(tmp_130, tmp_110);
     AltBn128::FrElement tmp_136 = E.fr.add(tmp_111, params.challenges[3]);
     AltBn128::FrElement tmp_137 = params.const_n[4 + i * 9];
     AltBn128::FrElement tmp_112 = E.fr.mul(params.challenges[2], tmp_137);
     AltBn128::FrElement tmp_113 = E.fr.add(tmp_132, tmp_112);
     AltBn128::FrElement tmp_114 = E.fr.add(tmp_113, params.challenges[3]);
     AltBn128::FrElement tmp_138 = E.fr.mul(tmp_136, tmp_114);
     AltBn128::FrElement tmp_139 = params.const_n[5 + i * 9];
     AltBn128::FrElement tmp_115 = E.fr.mul(params.challenges[2], tmp_139);
     AltBn128::FrElement tmp_116 = E.fr.add(tmp_134, tmp_115);
     AltBn128::FrElement tmp_117 = E.fr.add(tmp_116, params.challenges[3]);
     params.cm3_n[6 + i*7] = E.fr.mul(tmp_138, tmp_117);
}
